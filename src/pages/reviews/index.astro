---
import type { MarkdownInstance } from 'astro';

import { ReviewTypeView } from '@/features/Reviews/ReviewTypeView';
import { GradientText } from '@/features/shared/GradientText';
import { Section } from '@/features/shared/Section';
import Base from '@/templates/Base.astro';
// eslint-disable-next-line prettier/prettier
import type { IFrontMatterReview } from '@/types/IFrontMatterReview';
// eslint-disable-next-line prettier/prettier
import { AppConfig } from '@/utils/AppConfig';
import { getNameFromSlug, getReviewTypeFromUrl, sortReviewsByReviewDate } from '@/utils/helpers';

interface ITypeData {
  type: string;
  reviews: MarkdownInstance<IFrontMatterReview>[];
}

const uniqueReviewTypes = new Set<any>();
const allReviews = await Astro.glob<IFrontMatterReview>('./**/*.md');
  allReviews.forEach(review => {
  uniqueReviewTypes.add(
        getReviewTypeFromUrl(review.url!));
});

console.log(allReviews.map(review => review.frontmatter));

const typeData: ITypeData[] = [];
uniqueReviewTypes.forEach(type => {
  const typeDatum: ITypeData = {type, reviews: []};
  allReviews.forEach(review => {
    if(getReviewTypeFromUrl(review.url!) === type) typeDatum.reviews.push(review)
  });
  typeDatum.reviews = sortReviewsByReviewDate(typeDatum.reviews);
  typeData.push(typeDatum);
});

const title = `Reviews | ${AppConfig.site_name}`;
const description =
  "All reviews--find all my opinions on media and products - Sa'id Kharboutli";
---

<Base head={{ title, description }}>
  <Section>
    <div class="text-center">
      <h1 class="text-3xl font-bold">All <GradientText>Reviews</GradientText></h1>
    </div>

    <div class="mt-2 flex justify-center gap-1 text-center md:gap-2">
      {[...uniqueReviewTypes].map((reviewType, i, arr) => (
      <div class="flex justify-center gap-1 text-xs md:gap-2">
        <a href={`/reviews/${reviewType}/`} class="font-semibold transition-all duration-150 hover:text-primary hover:scale-110">
          {getNameFromSlug(reviewType)}
        </a>
        {(i !== arr.length - 1) && <div class="flex">|</div>}
      </div>
      ))}
    </div>

  </Section>
  
  <Section>
    <ReviewTypeView typeData={typeData}/>
  </Section>
</Base>