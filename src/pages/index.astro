---
// TODO:
// - SEO
// - Phone support - navbar and hero (all else is good)
// - Blog post comments (giscus) - confirm operation after launch
// - Search (Pagefind) - fix and style after launch
// - Blog view count 

import { CTA } from '@/partials/CTA';
import { Hero } from '@/partials/Hero';
import { ProjectList } from '@/partials/ProjectList';
import { RecentPosts } from '@/partials/RecentPosts';
import Base from '@/templates/Base.astro';
// eslint-disable-next-line prettier/prettier
import type { IFrontMatterPost } from '@/types/IFrontMatterPost';
import type { IFrontMatterProject } from '@/types/IFrontMatterProject';
import { AppConfig } from '@/utils/AppConfig';
import { sortPostsByDate, sortProjectsByDate } from '@/utils/helpers';

const allPosts = await Astro.glob<IFrontMatterPost>('./blog/**/*.md');
const sortedPosts = sortPostsByDate(allPosts);

const allProjects = await Astro.glob<IFrontMatterProject>('./projects/**/*.md');
const sortedProjects = sortProjectsByDate(allProjects);

const projectAndPost: any[] = [];
sortedProjects.forEach((project) => {
  const data = {project, post: null as any}; 
  sortedPosts.forEach((post) => {
    if(data.project.frontmatter.series === post.frontmatter.series && post.frontmatter.isProject) data.post = post;
  });
  projectAndPost.push(data);
});

const { title, description } = AppConfig;
---

<Base head={{ title, description }}>
  <Hero client:load />

  <ProjectList projectList={projectAndPost.slice(0, 3)}/>

  <RecentPosts postList={sortedPosts.slice(0, 4)} />

  <CTA client:load />
</Base>