---
import type { MarkdownHeading } from 'astro';

import TableOfContents from '@/components/BlogPost/TableOfContents.astro';
import { BlogPost } from '@/partials/BlogPost';
import { CTA } from '@/partials/CTA';
import Base from '@/templates/Base.astro';
// eslint-disable-next-line prettier/prettier
import type { IFrontMatterPost } from '@/types/IFrontMatterPost';
import { AppConfig } from '@/utils/AppConfig';
import { sortPostsByDate } from '@/utils/helpers';

export interface Props {
  content: IFrontMatterPost;
  headings: MarkdownHeading[];
}

const { content, headings } = Astro.props as Props;

const path = Astro.url.pathname;
const title = `${content.title} - ${AppConfig.site_name}`;

const prevNextInSeries = {previous: null as any, next: null as any};
if(content.series) {
  const allPostsInSeries: any[] = [];
  const allPosts = await Astro.glob<IFrontMatterPost>('@/pages/blog/**/*.md');
  allPosts.forEach(post => {
    if(post.frontmatter.series === content.series) allPostsInSeries.push(post);
  })

  const sortedPostsInSeries = sortPostsByDate(allPostsInSeries);
  sortedPostsInSeries.forEach((post) => {
    if(new Date(post.frontmatter.pubDate) < new Date(content.pubDate)) prevNextInSeries.previous = post;
    else if (new Date(post.frontmatter.pubDate) > new Date(content.pubDate) && !prevNextInSeries.next) prevNextInSeries.next = post;
  })
}

---
<Base head={{ title, description: content.description }} >
    <BlogPost frontmatter={content} path={path} prevNextInSeries={prevNextInSeries} >
      <TableOfContents headings={headings} slot='toc' />
      <slot></slot>
    </BlogPost>
  <CTA client:load />
</Base>